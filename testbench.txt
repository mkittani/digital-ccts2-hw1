library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity testbench is
end;
architecture behavior of testbench is
    component asm is
    port(clk,reset,s  :in std_logic;
         X : in std_logic_vector(7 downto 0);
         Sqrt  : out std_logic_vector(7 downto 0));
    end component;
    --inputs
    signal clk: std_logic:='0';
    signal reset: std_logic:='0';
    signal s: std_logic;
    signal x: std_logic_vector(7 downto 0):=(others=>'0');
    --outputs
    signal sqrt: std_logic_vector(7 downto 0);

    BEGIN
        uut:asm port map(
            clk=> clk,
            reset=> reset,
            s=>s,
            x=>x,
            sqrt=>sqrt
            );

        clk_generation: process
        begin
            clk<='0';
            wait for 2 ns;
            clk<='1';
            wait for 2 ns;
        end process;

		stimulus_proc: process
        begin
            reset<='0';
            wait for 8 ns;
            reset<='1';
            
            for i in 1 to 200 loop
            	x<=x+'1';
                s<='1';
                wait for 8 ns;
                s<='0';
                wait for 80 ns;
			end loop;
            reset<='0';
            wait;
      end process;
    END;